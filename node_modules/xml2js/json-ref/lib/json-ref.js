(function() {
  this.ref = function(value) {
    var ref, refs;
    refs = [];
    ref = function(value) {
      var i, k, r, result, v, _len;
      if (!value) {
        return value;
      }
      if (typeof value !== 'object') {
        return value;
      }
      for (i = 0, _len = refs.length; i < _len; i++) {
        r = refs[i];
        if (r === value) {
          return {
            $ref: "" + (i + 1)
          };
        }
      }
      result = {
        $id: "" + (refs.push(value))
      };
      if ('[object Array]' === Object.prototype.toString.call(value)) {
        result.$values = (function() {
          var _i, _len, _results;
          _results = [];
          for (_i = 0, _len = value.length; _i < _len; _i++) {
            v = value[_i];
            _results.push(ref(v));
          }
          return _results;
        })();
      } else {
        for (k in value) {
          v = value[k];
          result[k] = ref(v);
        }
      }
      return result;
    };
    return ref(value);
  };
  this.deref = function(value) {
    var deref, refs;
    refs = {};
    deref = function(value) {
      var k, result, v, _i, _len, _ref;
      if (!value) {
        return value;
      }
      if (typeof value !== 'object') {
        return value;
      }
      if ('$ref' in value) {
        return refs[value.$ref];
      }
      if ('$id' in value) {
        if ('$values' in value) {
          result = refs[value.$id] = [];
          _ref = value.$values;
          for (_i = 0, _len = _ref.length; _i < _len; _i++) {
            v = _ref[_i];
            result.push(deref(v));
          }
          return result;
        }
        result = refs[value.$id] = {};
        for (k in value) {
          v = value[k];
          if (k !== '$id') {
            result[k] = deref(v);
          }
        }
        return result;
      }
      return value;
    };
    return deref(value);
  };
}).call(this);
